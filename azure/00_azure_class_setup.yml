---
- hosts: localhost
  connection: local
  vars:
    location: northeurope
    tag_owner: arrow
    tag_project: training
    resourcegroup: StudentPCs

  tasks:
    - name: Azure Resource Group
      include_role:
        name: jesperberth.az_resourcegroup

    - name: Azure Virtual Network
      ansible.builtin.include_role:
        name: jesperberth.az_virtualnetwork
      vars:
        owner: "{{ tag_owner }}"
        project: "{{ tag_project }}"

    - name: Azure Network Security Group
      ansible.builtin.include_role:
        name: jesperberth.az_securitygroup
      vars:
        networksecuritygroup_name: "{{ item.nsgname }}"
        rulename: "{{ item.name }}"
        ruleprotocol: "{{ item.proto }}"
        rulesourceaddress: "{{ item.sourceadd }}"
        ruledestinationportrange: "{{ item.destportrange }}"
        ruleaccess: "{{ item.access }}"
        rulepriority: "{{ item.pri }}"
        ruledirection: "{{ item.dir }}"
        owner: "{{ tag_owner }}"
        project: "{{ tag_project }}"
      loop:
        - {nsgname: 'SG_Network', name: 'AllowSSH', proto: 'Tcp', sourceadd: '0.0.0.0/0', destportrange: '22', access: 'Allow', pri: '102', dir: 'Inbound'}
        - {nsgname: 'SG_Network', name: 'AllowRDP', proto: 'Tcp', sourceadd: '0.0.0.0/0', destportrange: '3389', access: 'Allow', pri: '103', dir: 'Inbound'}
        - {nsgname: 'SG_Network', name: 'AllowHTTP', proto: 'Tcp', sourceadd: '0.0.0.0/0', destportrange: '80', access: 'Allow', pri: '104', dir: 'Inbound'}
        - {nsgname: 'SG_Network', name: 'AllowHTTPS', proto: 'Tcp', sourceadd: '0.0.0.0/0', destportrange: '443', access: 'Allow', pri: '105', dir: 'Inbound'}

    - name: Create network interfaces
      azure_rm_networkinterface:
        name: "{{ item }}_nic01"
        resource_group: "{{ resourcegroup }}"
        virtual_network: "VirtualNetwork"
        subnet_name: "Servers"
        security_group: "SG_Network"
        ip_configurations:
          - name: "{{ item }}_nic01_ipconfig"
            public_ip_address_name: "{{ item }}_public_ip"
            primary: true
      loop:
        "{{ compute }}"
      async: 1000
      poll: 0
      register: create_nic

    - name: Wait for Network Interfaces
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 30
      delay: 5
      with_items: "{{ create_nic.results }}"

  # Create Virtual Machines
    - name: Create Virtual Machines
      azure_rm_virtualmachine:
        resource_group: "{{ resourcegroup }}"
        name: "{{ item }}"
        os_type: "Windows"
        admin_username: "{{ adminUser }}"
        admin_password: "{{ adminPassword }}"
        managed_disk_type: Standard_LRS
        state: present
        image:
          offer: "windows-11"
          publisher: "microsoftwindowsdesktop"
          sku: "win11-21h2-pro"
          version: latest
        vm_size: "Standard_D4s_v3"
        network_interfaces: "{{ item }}_nic01"
      loop:
        "{{ compute }}"
      async: 1000
      poll: 0
      register: create_vm

    - name: Wait for Virtual Machines
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 100
      delay: 5
      with_items: "{{ create_vm.results }}"
